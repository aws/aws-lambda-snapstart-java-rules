<?xml version="1.0" encoding="UTF-8"?>
<MessageCollection xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="messagecollection.xsd">

  <Plugin>
    <ShortDescription>AWS Lambda SnapStart SpotBugs Plugin</ShortDescription>
    <Details>This plugin contains AWS Lambda SnapStart bug detectors.</Details>
  </Plugin>

  <Detector class="software.amazon.lambda.snapstart.BuildRandomReturningMethodsDatabase">
    <Details>
      Builds the database of methods which might recursively return a byproduct of a pseudo-random value.
    </Details>
  </Detector>

  <Detector class="software.amazon.lambda.snapstart.LambdaHandlerInitedWithRandomValue">
    <Details>
      Main detector to find out SnapStart bugs in Lambda handler classes.
    </Details>
  </Detector>

  <BugPattern type="AWS_LAMBDA_SNAP_START_BUG">
    <ShortDescription>Detected handler state that is potentially not resilient to VM snapshot and restore operations.</ShortDescription>
    <LongDescription>Detected handler state that is potentially not resilient to VM snapshot and restore operations in Lambda function {0}.</LongDescription>
    <Details>
      <![CDATA[
        <p>Our analysis shows that AWS Lambda handler class initialization creates state that may not remain unique for the function
        when it uses SnapStart. Lambda functions that use SnapStart are  snapshotted at their initialized state and all execution
        environments created afterwards share the same initial state. This means that if the Lambda function relies on state that
        is not resilient to snapshot and restore operations, it might manifest an unexpected behavior by using SnapStart.</p>

        <p>This tool helps provide an insight on possible cases where your code may not be fully compatible with
        snapstart enabled. Please verify that your code maintains uniqueness with SnapStart. For best practices, follow the
        guidelines outlined in the SnapStart <a href="https://github.com/aws/aws-lambda-snapstart-java-rules/wiki">documentation</a>.</p>
      ]]>
    </Details>
  </BugPattern>

  <BugCode abbrev="SNAP_START">Potential SnapStart Bug</BugCode>
</MessageCollection>
